<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.biz.console.sys.menu.dao.MenuMapper">

	<sql id="Base_Column_List">
		<![CDATA[
            select t.menu_id,
                   t.text,
                   t.url,
                   t.iconcls,
                   t.is_leaf,
                   t.pid,
                   t.order_no,
                   t.is_valid
              from s_menu t
        ]]>
	</sql>

	<!-- 导航栏菜单 -->
	<select id="qryMenuByUserId" resultType="menu">
		<include refid="Base_Column_List" />
        <![CDATA[
			 where t.is_valid = 1
			   and (exists (select 1
			           from s_user_role b, s_role c
			          where b.role_id = c.role_id
			            and c.role_code = 'admin'
			            and b.user_id = #{userId}) or
			        (exists (select 1
			            from s_menu a
			           where a.is_valid = 1
			             and exists (select 1
			                    from s_authority b, s_role_authority c, s_user_role d
			                   where a.menu_id = b.menu_id
			                     and b.auth_id = c.auth_id
			                     and c.role_id = d.role_id
			                     and d.user_id = #{userId})
			             and find_in_set(t.menu_id, get_menu_bychildid(a.menu_id)) > 0)))
			 order by t.grade, t.order_no
		]]>
	</select>

	<!-- 菜单树 -->
	<select id="qryMenuTree" resultType="menu">
		<include refid="Base_Column_List" />
		<where>
			<if test="isValid != null">
				and t.is_valid = #{isValid}
			</if>
		</where>
		order by t.grade, t.order_no
	</select>

	<!-- 菜单权限树：角色管理 -->
	<select id="qryMenuAuthTree" resultType="menu">
		<![CDATA[
            select x.menu_id, x.pid, x.text
              from (select t.menu_id, t.pid, t.text, t.is_valid, t.grade, t.order_no
                      from s_menu t
                     where t.is_valid = 1
                       and exists (select 1
                              from s_menu a
                             where a.is_valid = 1
                               and exists (select 1
                                      from s_authority b, s_authority_roletype c
                                     where a.menu_id = b.menu_id
                                       and b.auth_id = c.auth_id
                                       and c.role_type = #{roleType})
                               and find_in_set(t.menu_id, get_menu_bychildid(a.menu_id)) > 0)
                    union
                    select t.auth_id,
                           t.menu_id,
                           t.auth_name,
                           t.is_valid,
                           (select f.grade + 1 from s_menu f where f.menu_id = t.menu_id),
                           t.order_no
                      from s_authority t
                     where t.is_valid = 1
                       and exists (select 1
                              from s_authority_roletype f
                             where f.auth_id = t.auth_id
                               and f.role_type = #{roleType})) x
             order by x.grade, x.order_no
        ]]>
	</select>

	<select id="qryForList" resultType="menu">
		<include refid="Base_Column_List" />
		<where>
			<if test="pid != null">
				and t.pid = #{pid}
			</if>
		</where>
		order by t.grade, t.order_no
	</select>

	<select id="getInfo" resultType="menu">
		<include refid="Base_Column_List" />
		where t.menu_id = #{menuId}
	</select>

	<insert id="insert">
		<![CDATA[
            insert into s_menu
              (text, grade, url, iconcls, is_leaf, pid, order_no, is_valid)
            values
              (#{text},
               (select t.grade + 1 from s_menu t where t.menu_id = #{pid}),
               #{url},
               #{iconCls},
               #{isLeaf},
               #{pid},
               #{orderNo},
               #{isValid})
        ]]>
	</insert>

	<update id="update">
		<![CDATA[
            update s_menu
               set text     = #{text},
                   url      = #{url},
                   iconcls  = #{iconCls},
                   is_leaf  = #{isLeaf},
                   pid      = #{pid},
                   order_no = #{orderNo},
                   is_valid = #{isValid}
             where menu_id = #{menuId}
        ]]>
	</update>

</mapper>